// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UserRegistrationAPI;

namespace UserRegistrationAPI.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20220725175411_TablesAndSeeding")]
    partial class TablesAndSeeding
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("UserRegistrationAPI.Models.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Apartament")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DataSheetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("House")
                        .HasColumnType("int");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9245fe4a-d402-451c-b9ed-9c1a04247482"),
                            Apartament = 10,
                            City = "Vilnius",
                            House = 10,
                            Street = "Neries g."
                        },
                        new
                        {
                            Id = new Guid("083a8133-231d-4028-a878-b365ba2f9eb4"),
                            Apartament = 20,
                            City = "Kaunas",
                            House = 20,
                            Street = "Nemuno g."
                        });
                });

            modelBuilder.Entity("UserRegistrationAPI.Models.DataSheet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PersonalNumber")
                        .HasColumnType("float");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("UserId");

                    b.ToTable("DataSheets");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9245fe4a-d402-451c-b9ed-9c1a04247482"),
                            AddressId = new Guid("9245fe4a-d402-451c-b9ed-9c1a04247482"),
                            Email = "vardenis@vardenis.lt",
                            FirstName = "Vardenis",
                            LastName = "Pavarednis",
                            PersonalNumber = 38989521245.0
                        },
                        new
                        {
                            Id = new Guid("083a8133-231d-4028-a878-b365ba2f9eb4"),
                            AddressId = new Guid("083a8133-231d-4028-a878-b365ba2f9eb4"),
                            Email = "antanas@antanas.lt",
                            FirstName = "Antanas",
                            LastName = "Antanaitis",
                            PersonalNumber = 38989521245.0
                        });
                });

            modelBuilder.Entity("UserRegistrationAPI.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DataSheetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DataSheetId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fa556208-e140-403e-9c9a-f4e644e1d319"),
                            DataSheetId = new Guid("9245fe4a-d402-451c-b9ed-9c1a04247482"),
                            Password = "P@ssword1",
                            Role = "User",
                            Username = "Vardenis"
                        },
                        new
                        {
                            Id = new Guid("a53df72d-6769-4b1f-ae18-824a3fdf7f99"),
                            DataSheetId = new Guid("083a8133-231d-4028-a878-b365ba2f9eb4"),
                            Password = "P@ssword2",
                            Role = "User",
                            Username = "Antanas"
                        });
                });

            modelBuilder.Entity("UserRegistrationAPI.Models.Address", b =>
                {
                    b.HasOne("UserRegistrationAPI.Models.DataSheet", null)
                        .WithMany("Addresses")
                        .HasForeignKey("DataSheetId");
                });

            modelBuilder.Entity("UserRegistrationAPI.Models.DataSheet", b =>
                {
                    b.HasOne("UserRegistrationAPI.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UserRegistrationAPI.Models.User", null)
                        .WithMany("DataSheets")
                        .HasForeignKey("UserId");

                    b.Navigation("Address");
                });

            modelBuilder.Entity("UserRegistrationAPI.Models.User", b =>
                {
                    b.HasOne("UserRegistrationAPI.Models.DataSheet", "DataSheet")
                        .WithMany()
                        .HasForeignKey("DataSheetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DataSheet");
                });

            modelBuilder.Entity("UserRegistrationAPI.Models.DataSheet", b =>
                {
                    b.Navigation("Addresses");
                });

            modelBuilder.Entity("UserRegistrationAPI.Models.User", b =>
                {
                    b.Navigation("DataSheets");
                });
#pragma warning restore 612, 618
        }
    }
}
